create table role (
    id bigint generated by default as identity primary key,
    name varchar(255) not null unique
);

create table app_user (
    id bigint generated by default as identity primary key,
    role_id bigint references role(id),
    email varchar(255) not null unique,
    password varchar(255) not null,
    username varchar(255) not null unique
);

create table event_category (
    id bigint generated by default as identity primary key,
    description varchar(255),
    name varchar(255) not null unique
);

create table event (
    id bigint generated by default as identity primary key,
    title varchar(255) not null,
    description varchar(255),
    location varchar(255),
    latitude float(53),
    longitude float(53),
    start_time timestamp(6) not null,
    end_time timestamp(6) not null,
    category_id bigint references event_category(id),
    organizer_id bigint references app_user(id),
    created_by bigint references app_user(id),
    capacity integer,
    registered_count integer,
    status varchar(255) check (status in ('PENDING','APPROVED','REJECTED'))
);

create table feedback (
    id bigint generated by default as identity primary key,
    user_id bigint references app_user(id),
    event_id bigint references event(id),
    rating varchar(255) check (rating in ('ONE','TWO','THREE','FOUR','FIVE')),
    comment varchar(255),
    sentiment varchar(255) check (sentiment in ('POSITIVE','NEGATIVE','NEUTRAL')),
    sentiment_score float(53),
    created_at timestamp(6)
);

create table organizer_application (
    id bigint generated by default as identity primary key,
    user_id bigint unique references app_user(id),
    organizer_name varchar(255),
    status varchar(255) check (status in ('PENDING','APPROVED','REJECTED')),
    applied_at timestamp(6) not null,
    description varchar(255),
    email varchar(255)
);

create table pending_user (
    id bigint generated by default as identity primary key,
    email varchar(255),
    password varchar(255),
    name varchar(255),
    otp_code varchar(255),
    expiry_date timestamp(6)
);

create table registration (
    id bigint generated by default as identity primary key,
    user_id bigint not null references app_user(id),
    event_id bigint not null references event(id),
    register_at timestamp(6) not null,
    checked_in boolean not null,
    unique(user_id, event_id)
);

create table user_profile (
    id bigint generated by default as identity primary key,
    user_id bigint not null unique references app_user(id),
    full_name varchar(255),
    date_of_birth date,
    gender varchar(255) check (gender in ('MALE','FEMALE')),
    address varchar(255)
);

create table intent_reply (
    id bigint generated by default as identity primary key,
    intent varchar(255) not null unique,
    reply text not null
);